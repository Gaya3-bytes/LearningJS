Problem:

Write a function called “addFive”.
Given a number, “addFive” returns 5 added to that number.

Input:

addFive(5);
addFive(0);
addFive(-5);

Output:

10
5
0

var num = 15
function addFive(num)
{
return (num+5);
}
console.log(addFive(num))


Problem:

Write a function called “getOpposite”.
Given a number, return its opposite

Input:

getOpposite(5);
getOpposite(0);
getOpposite(-5);
getOpposite(“5a”);
getOpposite(5.5);

Output:

-5
0
5
-1
-1

var num = 0;
function getOpposite(num)
{
if (typeof num == number)
   if (num - Math.floor(num) === 0)
      return (num * -1)
}
console.log(getOpposite(num));


Problem:

Fill in your code that takes an number minutes and converts it to seconds.

Examples
toSeconds(5) ➞ 300

toSeconds(3) ➞ 180

toSeconds(2) ➞ 120

var min = 50;
function minToSec(min)
{
return min*60;
}


Problem

Create a function that takes a string and returns it as an integer.

Examples
toInteger(“6”) ➞ 6

toInteger(“1000”) ➞ 1000

toInteger(“12”) ➞ 12

var s = "15";
function toInt(s)
{
return parseInt(s);
}


Problem

Create a function that takes a number as an argument, increments the number by +1 and returns the result.

Examples
nextNumber(0) ➞ 1

nextNumber(9) ➞ 10

nextNumber(-3) ➞ -2

var num = 7;
function nextNumber(num)
{
if (typeof num == number)
   return num++;
}


Problem

Create a function that takes an array and returns the first element.

Examples
getFirstElement([1, 2, 3]) ➞ 1

getFirstElement([80, 5, 100]) ➞ 80

getFirstElement([-500, 0, 50]) ➞ -500


var arr = [5, 1 ,10];
function getFirstElement()
{
return arr[0];
}


Problem

Convert Hours into Seconds

Write a function that converts hours into seconds.

Examples
hourToSeconds(2) ➞ 7200

hourToSeconds(10) ➞ 36000

hourToSeconds(24) ➞ 86400

var hours = 1;
function hourToSeconds(hours)
{
  return hours * 3600;
}


Problem

Find the Perimeter of a Rectangle
Create a function that takes height and width and finds the perimeter of a rectangle.

Examples
findPerimeter(6, 7) ➞ 26

findPerimeter(20, 10) ➞ 60

findPerimeter(2, 9) ➞ 22

function findPerimeter(h, w)
{
  var p = 2 * (h + w);
  return p;
}


 
Problem

Less Than 100?
Given two numbers, return true if the sum of both numbers is less than 100. Otherwise return false.

Examples
lessThan100(22, 15) ➞ true
// 22 + 15 = 37

lessThan100(83, 34) ➞ false
// 83 + 34 = 117


function lessThan100(n1, n2)
{
  if (n1 + n2 < 100)
     return true;
  else
     return false;
}


Problem

There is a single operator in JavaScript, capable of providing the remainder of a division operation. Two numbers are passed as parameters. The first parameter divided by the second parameter will have a remainder, possibly zero. Return that value.

Examples
remainder(1, 3) ➞ 1

remainder(3, 4) ➞ 3

remainder(-9, 45) ➞ -9

remainder(5, 5) ➞ 0 

function remainder(n1,n2)
{ 
  if (n1 % n2 === 0)
      return 0;
  else
      return n1;
}


Problem

Old macdonald had a farm:

MacDonald is asking you to tell him how many legs can be counted among all his animals. The farmer breeds three species:

turkey = 2 legs
horse = 4 legs
pigs = 4 legs

The farmer has counted his animals and he gives you a subtotal for each species. You have to implement a function that returns the total number of legs of all the animals.

Examples
CountAnimals(2, 3, 5) ➞ 36

CountAnimals(1, 2, 3) ➞ 22

CountAnimals(5, 2, 8) ➞ 50

function countAnimal(tur, horse, pigs)
{
  var legs = tur * 2 + horse * 4 + pigs * 4;
  return legs;
}


Problem

Frames Per Second
Create a function that returns the number of frames shown in a given number of minutes for a certain FPS.

Examples
frames(1, 1) ➞ 60

frames(10, 1) ➞ 600

frames(10, 25) ➞ 15000

function frames (n1, n2)
{
  return n1 * n2 * 60;
}



Problem

Check if an Integer is Divisible By Five
Create a function that returns true if an integer is evenly divisible by 5, and false otherwise.

Examples
divisibleByFive(5) ➞ true

divisibleByFive(-55) ➞ true

divisibleByFive(37) ➞ false


function divisibleByFive(num)
{
  if (num%5 === 0)
     return true;
  else
     return false;
}



Problem:

Write a function called “isEven”.
Given a number, “isEven” returns whether it is even.

Input:
isEven(12);
isEven(0);
isEven(11);
isEven(“11h”);

Output:

true
true
false
-1


function isEven(n)
{
  if (typeof n == number)
      if (n % 2 === 0)
         return true;
      else
         return false;
   else
       return (-1);
}



Problem:
Write a function called “areBothOdd”.
Given 2 numbers, “areBothOdd” returns whether or not both of the given numbers are odd.

Input:
areBothOdd(1, 3);
areBothOdd(1, 4);
areBothOdd(2, 3);
areBothOdd(0, 0);

Output:

true
flase
flase
flase


function areBothOdd(n1, n2)
{ 
  if ((n1%2 !== 0) && (n2 %2 !== 0))
     return true;
  else
     return false;
}


Problem:
Write a function called “getFullName”.
Given a first and a last name, “getFullName” returns a single string with the given first and last names separated by a single space.

Input:

getFullName(“GUVI”, “GEEK”);
getFullName(“GUVI”, );
getFullName(, “GEEK”);
getFullName(“”, “”);

Output:

“GUVI GEEK”
“GUVI”
“GEEK”
“”

function getFullName("a", "b")
{
  var c = "a" + ' ' + "b";
  return c;
}



Problem:
Write a function called “getLengthOfWord”.
Given a word, “getLengthOfWord” returns the length of the given word.
Input:

getLengthOfWord(“GUVI”);
getLengthOfWord(“”);
getLengthOfWord();
getLengthOfWord(9);

Output:

4
0
-1
-1

function getLengthOfWord(a)
{ 
  if (typeof a == string)
     return a.length;
  else
      return -1;
}



Problem:
Write a function called “isSameLength”.
Given two words, “isSameLength” returns whether the given words have the same length.
Input:
isSameLength(“GUVI”, “GEEK”);
Output:
true

function isSameLength(w1, w2)
{ 
  if (w1.length == w2.length)
     return true;
  else
     return false;
}


Problem:

Create a function to calculate the distance between two points defined by their x, y coordinates


function getDistance(x1, y1, x2, y2)
{ 
  var x = (x2 - x1) * (x2 - x1);
  var y = (y2 - y1) * (y2 - y1);
  var dist = Math.sqrt(x + y);
  return dist;
}


Problem:

Write a function called “getNthElement”.
Given an array and an integer, “getNthElement” returns the element at the given integer, within the given array. If the array has a length of 0, it should return ‘undefined’.

var arr = [1, 2, 3];
var n = 1;
function getNthElement()
{
  return arr[n];
}



Problem:

Write a function called “getLastElement”.
Given an array, “getLastElement” returns the last element of the given array. If the given array has a length of 0, it should return ‘-1’.

var a = [];
function getLastELement()
{
  if (a.length === 0)
     return -1;
  return a[a.length - 1];
}


Problem:

Write a function called “getProperty”.
Given an object and a key, “getProperty” returns the value of the property at the given key. If there is no property at the given key, it should return undefined.

var obj = { "key1": "value1", "key2": "value2"};
var mykey = "key2";
function getProperty()
{
 for(var val of obj) 
    var p = obj[mykey]
 return p;  
}



Write a function called “addProperty”.
Given an object and a key, “addProperty” adds a new property on the given object with a value of true.

var obj = { "key1": "value1", "key2": "value2"};
function addProperty()
{ 
  obj."key3" = "value3";
  return obj;
}



Problem:

Write a function called “removeProperty”.
Given an object and a key, “removeProperty” removes the given key from the given object.

var obj = { "key1": "value1", "key2": "value2"};
function removeProperty()
{ 
  delete obj.key2;
  return obj;
}


Problem:

Return an array, where the first element is the count of positives numbers and the second element is sum of negative numbers.

var arr = [-5, 10, -3, 12, -9, 5, 90, 0, 1];
function csfs()
{
  var arrt = [];
  var count = 0;
  var sum = 0;
  for (var i = 0; i<= arr.length; i++)
  {
    if (arr[i] > 0)
       count += 1;
    else
       sum = sum + arr[i];
  }
  arrt.push(count);
  arrt(sum);
  return arrt;
}


Problem:

Write a function `powersOfTwo` which will return list of all powers of 2 from 0 to n (where n is an exponent).

var a = [];
function power2(n)
{
  for (var i = 0; i<=n; i++)
      a.push(Math.pow(2,i));
  var c = a.join(", ");
  return c;
}


Problem:

Find the maximum number in an array of numbers

var arr = [5, -1, 2 , 10, 15 ,20];
const maximum = Math.max.apply(null, arr);
console.log(maximum);



Problem:

Print the first 100 prime numbers

printPrimes(100);
function printPrimes(nPrimes)
{
 var n = 0;
 var i = 2;
 
 while(n < nPrimes)
 {
 if (isPrime(i))
 {
 console.log(n, “ → “, i);
 n++;
 }
 
 i++;
 }
}
function isPrime(n)
{
 for (var i = 2; i< n; i++)
     if (n % i === 0)
        return false;
        break;
     else
        return true;
}  


Problem:

Reverse a string

function reverseString(s)
{
   var d = s.split("");
   d.reverse();
   var l = d.join("");
   return l;  
}



Problem:

Create a function that will merge two arrays and return the result as a new array

var arr1 = ['a', 't', 'c', 'r'];
var arr2 = ['d', 'e', 'f', 'y'];
var arr3 = arr1.concat(arr2);

console.log(arr3);

  

Problem:

Calculate the sum of numbers received in a comma delimited string

var stri = “1.5, 2.3, 3.1, 4, 5.5, 6, 7, 8, 9, 10.9”;
function sumCSV()
{ 
  var a = stri.split(", ");
  var sum =0;
  for (var i = 0; i< a.length; i++)
      sum = sum + parseInt(a[i]);
  return sum;
}
 
